=begin
#GMO Aozora Net Bank Open API

#<p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p> <div>   <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/business/service/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div> </div> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4> <div style='width:100%; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>   <div style='display:table; margin-left:10px; background-color:#29659b;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       本番環境：api.gmo-aozora.com</br>       開発環境：stg-api.gmo-aozora.com     </div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       https://{domain_name}/ganb/api/corporation/{version}</br>       <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>       　https://api.gmo-aozora.com/ganb/api/corporation/<span style='border-bottom:solid 1px;'>v1</span>     </div>   </div> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <ul>     <li>レスポンスデータ</li>       <ul>         <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>     <li>配列</li>       <ul>         <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>         <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>   </ul> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>   <ul>     <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>     <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>   </ul> </div> 

OpenAPI spec version: 1.1.12

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'date'

module SwaggerClient
  class VaListRequest
    # 振込入金口座API認証情報 半角英数字 銀行契約の方はNULLを設定 提携企業の方が、契約された顧客の一覧照会を依頼される場合は必須 提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却 
    attr_accessor :va_contract_auth_key

    # 振込入金口座　種類コード 半角数字 ・1=期限型 ・2=継続型 
    attr_accessor :va_type_code

    # 入金有無コード 半角数字 ・1=入金あり ・2=入金なし 
    attr_accessor :deposit_amount_exist_code

    # 振込入金口座名義カナ 半角文字 振込許容文字を指定可 ただし、一部の非許容文字は、許容文字に変換を行います 
    attr_accessor :va_holder_name_kana

    # 振込入金口座IDリスト 照会したい振込入金口座状態コードのリスト 上限3件まで設定可能 
    attr_accessor :va_status_code_list

    # 最終入金日From 半角文字 YYYY-MM-DD形式 入金有無コードが未設定もしくは、「1=入金あり」が設定されている場合は指定可 それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却） 
    attr_accessor :latest_deposit_date_from

    # 最終入金日To 半角文字 YYYY-MM-DD形式 入金有無コードが未設定もしくは、「1=入金あり」が設定されている場合は指定可 それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却） 最終入金日Fromと最終入金日Toを指定する場合は、最終入金日From≦最終入金日Toとし、それ以外は「400 Bad Request」を返却 
    attr_accessor :latest_deposit_date_to

    # 振込入金口座発行日From 半角文字 YYYY-MM-DD形式 
    attr_accessor :va_issue_date_from

    # 振込入金口座発行日To 半角文字 YYYY-MM-DD形式 振込入金口座発行Fromと振込入金口座発行Toを指定する場合は、振込入金口座発行From≦振込入金口座発行Toとし、それ以外は「400 Bad Request」を返却 
    attr_accessor :va_issue_date_to

    # 有効期限From 半角文字 YYYY-MM-DD形式 振込入金口座 種類コードが未設定もしくは、「1＝期限型」が設定されている場合は指定可　それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却） 
    attr_accessor :expire_date_from

    # 有効期限To 半角文字 YYYY-MM-DD形式 振込入金口座 種類コードが未設定もしくは、「1＝期限型」が設定されている場合は指定可　それ以外はNULLを設定（値が設定されている場合は、「400 Bad Request」を返却） 有効期限Fromと有効期限Toを指定する場合は、有効期限From≦有効期限Toとし、それ以外は「400 Bad Request」を返却 
    attr_accessor :expire_date_to

    # 入金口座ID 半角数字 口座一覧照会APIで取得できる口座IDを設定 科目コードが以下の口座IDのみ受け付けます ・01=普通預金（有利息） ・02=普通預金（決済用） 
    attr_accessor :ra_id

    # 次一覧キー 半角英数字 
    attr_accessor :next_item_key

    # ソート項目コード 半角数字 ・1=有効期限日時 ・2=最終入金日 ・3=発行日時 ・4=最終入金金額 有効期限日時、最終入金日、最終入金金額など、レスポンスで返却されない場合がある項目をソート項目に指定した場合、ソートは効きません 
    attr_accessor :sort_item_code

    # ソート順コード 半角数字 ソート項目コードのソート順を指定するコード値 ・1=昇順 ・2=降順 
    attr_accessor :sort_order_code

    # 振込入金口座IDリスト 照会したい振込入金口座IDのリスト 上限500件まで設定可能 
    attr_accessor :va_id_list

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'va_contract_auth_key' => :'vaContractAuthKey',
        :'va_type_code' => :'vaTypeCode',
        :'deposit_amount_exist_code' => :'depositAmountExistCode',
        :'va_holder_name_kana' => :'vaHolderNameKana',
        :'va_status_code_list' => :'vaStatusCodeList',
        :'latest_deposit_date_from' => :'latestDepositDateFrom',
        :'latest_deposit_date_to' => :'latestDepositDateTo',
        :'va_issue_date_from' => :'vaIssueDateFrom',
        :'va_issue_date_to' => :'vaIssueDateTo',
        :'expire_date_from' => :'expireDateFrom',
        :'expire_date_to' => :'expireDateTo',
        :'ra_id' => :'raId',
        :'next_item_key' => :'nextItemKey',
        :'sort_item_code' => :'sortItemCode',
        :'sort_order_code' => :'sortOrderCode',
        :'va_id_list' => :'vaIdList'
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        :'va_contract_auth_key' => :'String',
        :'va_type_code' => :'String',
        :'deposit_amount_exist_code' => :'String',
        :'va_holder_name_kana' => :'String',
        :'va_status_code_list' => :'Array<VaStatusCode>',
        :'latest_deposit_date_from' => :'String',
        :'latest_deposit_date_to' => :'String',
        :'va_issue_date_from' => :'String',
        :'va_issue_date_to' => :'String',
        :'expire_date_from' => :'String',
        :'expire_date_to' => :'String',
        :'ra_id' => :'String',
        :'next_item_key' => :'String',
        :'sort_item_code' => :'String',
        :'sort_order_code' => :'String',
        :'va_id_list' => :'Array<VaId>'
      }
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h| h[k.to_sym] = v }

      if attributes.has_key?(:'vaContractAuthKey')
        self.va_contract_auth_key = attributes[:'vaContractAuthKey']
      end

      if attributes.has_key?(:'vaTypeCode')
        self.va_type_code = attributes[:'vaTypeCode']
      end

      if attributes.has_key?(:'depositAmountExistCode')
        self.deposit_amount_exist_code = attributes[:'depositAmountExistCode']
      end

      if attributes.has_key?(:'vaHolderNameKana')
        self.va_holder_name_kana = attributes[:'vaHolderNameKana']
      end

      if attributes.has_key?(:'vaStatusCodeList')
        if (value = attributes[:'vaStatusCodeList']).is_a?(Array)
          self.va_status_code_list = value
        end
      end

      if attributes.has_key?(:'latestDepositDateFrom')
        self.latest_deposit_date_from = attributes[:'latestDepositDateFrom']
      end

      if attributes.has_key?(:'latestDepositDateTo')
        self.latest_deposit_date_to = attributes[:'latestDepositDateTo']
      end

      if attributes.has_key?(:'vaIssueDateFrom')
        self.va_issue_date_from = attributes[:'vaIssueDateFrom']
      end

      if attributes.has_key?(:'vaIssueDateTo')
        self.va_issue_date_to = attributes[:'vaIssueDateTo']
      end

      if attributes.has_key?(:'expireDateFrom')
        self.expire_date_from = attributes[:'expireDateFrom']
      end

      if attributes.has_key?(:'expireDateTo')
        self.expire_date_to = attributes[:'expireDateTo']
      end

      if attributes.has_key?(:'raId')
        self.ra_id = attributes[:'raId']
      end

      if attributes.has_key?(:'nextItemKey')
        self.next_item_key = attributes[:'nextItemKey']
      end

      if attributes.has_key?(:'sortItemCode')
        self.sort_item_code = attributes[:'sortItemCode']
      end

      if attributes.has_key?(:'sortOrderCode')
        self.sort_order_code = attributes[:'sortOrderCode']
      end

      if attributes.has_key?(:'vaIdList')
        if (value = attributes[:'vaIdList']).is_a?(Array)
          self.va_id_list = value
        end
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      if !@va_contract_auth_key.nil? && @va_contract_auth_key.to_s.length > 400
        invalid_properties.push('invalid value for "va_contract_auth_key", the character length must be smaller than or equal to 400.')
      end

      if !@va_contract_auth_key.nil? && @va_contract_auth_key.to_s.length < 1
        invalid_properties.push('invalid value for "va_contract_auth_key", the character length must be great than or equal to 1.')
      end

      if !@va_type_code.nil? && @va_type_code.to_s.length > 1
        invalid_properties.push('invalid value for "va_type_code", the character length must be smaller than or equal to 1.')
      end

      if !@va_type_code.nil? && @va_type_code.to_s.length < 1
        invalid_properties.push('invalid value for "va_type_code", the character length must be great than or equal to 1.')
      end

      if !@deposit_amount_exist_code.nil? && @deposit_amount_exist_code.to_s.length > 1
        invalid_properties.push('invalid value for "deposit_amount_exist_code", the character length must be smaller than or equal to 1.')
      end

      if !@deposit_amount_exist_code.nil? && @deposit_amount_exist_code.to_s.length < 1
        invalid_properties.push('invalid value for "deposit_amount_exist_code", the character length must be great than or equal to 1.')
      end

      if !@va_holder_name_kana.nil? && @va_holder_name_kana.to_s.length > 40
        invalid_properties.push('invalid value for "va_holder_name_kana", the character length must be smaller than or equal to 40.')
      end

      if !@va_holder_name_kana.nil? && @va_holder_name_kana.to_s.length < 1
        invalid_properties.push('invalid value for "va_holder_name_kana", the character length must be great than or equal to 1.')
      end

      if !@latest_deposit_date_from.nil? && @latest_deposit_date_from.to_s.length > 10
        invalid_properties.push('invalid value for "latest_deposit_date_from", the character length must be smaller than or equal to 10.')
      end

      if !@latest_deposit_date_from.nil? && @latest_deposit_date_from.to_s.length < 10
        invalid_properties.push('invalid value for "latest_deposit_date_from", the character length must be great than or equal to 10.')
      end

      if !@latest_deposit_date_to.nil? && @latest_deposit_date_to.to_s.length > 10
        invalid_properties.push('invalid value for "latest_deposit_date_to", the character length must be smaller than or equal to 10.')
      end

      if !@latest_deposit_date_to.nil? && @latest_deposit_date_to.to_s.length < 10
        invalid_properties.push('invalid value for "latest_deposit_date_to", the character length must be great than or equal to 10.')
      end

      if !@va_issue_date_from.nil? && @va_issue_date_from.to_s.length > 10
        invalid_properties.push('invalid value for "va_issue_date_from", the character length must be smaller than or equal to 10.')
      end

      if !@va_issue_date_from.nil? && @va_issue_date_from.to_s.length < 10
        invalid_properties.push('invalid value for "va_issue_date_from", the character length must be great than or equal to 10.')
      end

      if !@va_issue_date_to.nil? && @va_issue_date_to.to_s.length > 10
        invalid_properties.push('invalid value for "va_issue_date_to", the character length must be smaller than or equal to 10.')
      end

      if !@va_issue_date_to.nil? && @va_issue_date_to.to_s.length < 10
        invalid_properties.push('invalid value for "va_issue_date_to", the character length must be great than or equal to 10.')
      end

      if !@expire_date_from.nil? && @expire_date_from.to_s.length > 10
        invalid_properties.push('invalid value for "expire_date_from", the character length must be smaller than or equal to 10.')
      end

      if !@expire_date_from.nil? && @expire_date_from.to_s.length < 10
        invalid_properties.push('invalid value for "expire_date_from", the character length must be great than or equal to 10.')
      end

      if !@expire_date_to.nil? && @expire_date_to.to_s.length > 10
        invalid_properties.push('invalid value for "expire_date_to", the character length must be smaller than or equal to 10.')
      end

      if !@expire_date_to.nil? && @expire_date_to.to_s.length < 10
        invalid_properties.push('invalid value for "expire_date_to", the character length must be great than or equal to 10.')
      end

      if !@ra_id.nil? && @ra_id.to_s.length > 29
        invalid_properties.push('invalid value for "ra_id", the character length must be smaller than or equal to 29.')
      end

      if !@ra_id.nil? && @ra_id.to_s.length < 12
        invalid_properties.push('invalid value for "ra_id", the character length must be great than or equal to 12.')
      end

      if !@next_item_key.nil? && @next_item_key.to_s.length > 24
        invalid_properties.push('invalid value for "next_item_key", the character length must be smaller than or equal to 24.')
      end

      if !@next_item_key.nil? && @next_item_key.to_s.length < 1
        invalid_properties.push('invalid value for "next_item_key", the character length must be great than or equal to 1.')
      end

      if !@sort_item_code.nil? && @sort_item_code.to_s.length > 1
        invalid_properties.push('invalid value for "sort_item_code", the character length must be smaller than or equal to 1.')
      end

      if !@sort_item_code.nil? && @sort_item_code.to_s.length < 1
        invalid_properties.push('invalid value for "sort_item_code", the character length must be great than or equal to 1.')
      end

      if !@sort_order_code.nil? && @sort_order_code.to_s.length > 1
        invalid_properties.push('invalid value for "sort_order_code", the character length must be smaller than or equal to 1.')
      end

      if !@sort_order_code.nil? && @sort_order_code.to_s.length < 1
        invalid_properties.push('invalid value for "sort_order_code", the character length must be great than or equal to 1.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return false if !@va_contract_auth_key.nil? && @va_contract_auth_key.to_s.length > 400
      return false if !@va_contract_auth_key.nil? && @va_contract_auth_key.to_s.length < 1
      return false if !@va_type_code.nil? && @va_type_code.to_s.length > 1
      return false if !@va_type_code.nil? && @va_type_code.to_s.length < 1
      return false if !@deposit_amount_exist_code.nil? && @deposit_amount_exist_code.to_s.length > 1
      return false if !@deposit_amount_exist_code.nil? && @deposit_amount_exist_code.to_s.length < 1
      return false if !@va_holder_name_kana.nil? && @va_holder_name_kana.to_s.length > 40
      return false if !@va_holder_name_kana.nil? && @va_holder_name_kana.to_s.length < 1
      return false if !@latest_deposit_date_from.nil? && @latest_deposit_date_from.to_s.length > 10
      return false if !@latest_deposit_date_from.nil? && @latest_deposit_date_from.to_s.length < 10
      return false if !@latest_deposit_date_to.nil? && @latest_deposit_date_to.to_s.length > 10
      return false if !@latest_deposit_date_to.nil? && @latest_deposit_date_to.to_s.length < 10
      return false if !@va_issue_date_from.nil? && @va_issue_date_from.to_s.length > 10
      return false if !@va_issue_date_from.nil? && @va_issue_date_from.to_s.length < 10
      return false if !@va_issue_date_to.nil? && @va_issue_date_to.to_s.length > 10
      return false if !@va_issue_date_to.nil? && @va_issue_date_to.to_s.length < 10
      return false if !@expire_date_from.nil? && @expire_date_from.to_s.length > 10
      return false if !@expire_date_from.nil? && @expire_date_from.to_s.length < 10
      return false if !@expire_date_to.nil? && @expire_date_to.to_s.length > 10
      return false if !@expire_date_to.nil? && @expire_date_to.to_s.length < 10
      return false if !@ra_id.nil? && @ra_id.to_s.length > 29
      return false if !@ra_id.nil? && @ra_id.to_s.length < 12
      return false if !@next_item_key.nil? && @next_item_key.to_s.length > 24
      return false if !@next_item_key.nil? && @next_item_key.to_s.length < 1
      return false if !@sort_item_code.nil? && @sort_item_code.to_s.length > 1
      return false if !@sort_item_code.nil? && @sort_item_code.to_s.length < 1
      return false if !@sort_order_code.nil? && @sort_order_code.to_s.length > 1
      return false if !@sort_order_code.nil? && @sort_order_code.to_s.length < 1
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] va_contract_auth_key Value to be assigned
    def va_contract_auth_key=(va_contract_auth_key)
      if !va_contract_auth_key.nil? && va_contract_auth_key.to_s.length > 400
        fail ArgumentError, 'invalid value for "va_contract_auth_key", the character length must be smaller than or equal to 400.'
      end

      if !va_contract_auth_key.nil? && va_contract_auth_key.to_s.length < 1
        fail ArgumentError, 'invalid value for "va_contract_auth_key", the character length must be great than or equal to 1.'
      end

      @va_contract_auth_key = va_contract_auth_key
    end

    # Custom attribute writer method with validation
    # @param [Object] va_type_code Value to be assigned
    def va_type_code=(va_type_code)
      if !va_type_code.nil? && va_type_code.to_s.length > 1
        fail ArgumentError, 'invalid value for "va_type_code", the character length must be smaller than or equal to 1.'
      end

      if !va_type_code.nil? && va_type_code.to_s.length < 1
        fail ArgumentError, 'invalid value for "va_type_code", the character length must be great than or equal to 1.'
      end

      @va_type_code = va_type_code
    end

    # Custom attribute writer method with validation
    # @param [Object] deposit_amount_exist_code Value to be assigned
    def deposit_amount_exist_code=(deposit_amount_exist_code)
      if !deposit_amount_exist_code.nil? && deposit_amount_exist_code.to_s.length > 1
        fail ArgumentError, 'invalid value for "deposit_amount_exist_code", the character length must be smaller than or equal to 1.'
      end

      if !deposit_amount_exist_code.nil? && deposit_amount_exist_code.to_s.length < 1
        fail ArgumentError, 'invalid value for "deposit_amount_exist_code", the character length must be great than or equal to 1.'
      end

      @deposit_amount_exist_code = deposit_amount_exist_code
    end

    # Custom attribute writer method with validation
    # @param [Object] va_holder_name_kana Value to be assigned
    def va_holder_name_kana=(va_holder_name_kana)
      if !va_holder_name_kana.nil? && va_holder_name_kana.to_s.length > 40
        fail ArgumentError, 'invalid value for "va_holder_name_kana", the character length must be smaller than or equal to 40.'
      end

      if !va_holder_name_kana.nil? && va_holder_name_kana.to_s.length < 1
        fail ArgumentError, 'invalid value for "va_holder_name_kana", the character length must be great than or equal to 1.'
      end

      @va_holder_name_kana = va_holder_name_kana
    end

    # Custom attribute writer method with validation
    # @param [Object] latest_deposit_date_from Value to be assigned
    def latest_deposit_date_from=(latest_deposit_date_from)
      if !latest_deposit_date_from.nil? && latest_deposit_date_from.to_s.length > 10
        fail ArgumentError, 'invalid value for "latest_deposit_date_from", the character length must be smaller than or equal to 10.'
      end

      if !latest_deposit_date_from.nil? && latest_deposit_date_from.to_s.length < 10
        fail ArgumentError, 'invalid value for "latest_deposit_date_from", the character length must be great than or equal to 10.'
      end

      @latest_deposit_date_from = latest_deposit_date_from
    end

    # Custom attribute writer method with validation
    # @param [Object] latest_deposit_date_to Value to be assigned
    def latest_deposit_date_to=(latest_deposit_date_to)
      if !latest_deposit_date_to.nil? && latest_deposit_date_to.to_s.length > 10
        fail ArgumentError, 'invalid value for "latest_deposit_date_to", the character length must be smaller than or equal to 10.'
      end

      if !latest_deposit_date_to.nil? && latest_deposit_date_to.to_s.length < 10
        fail ArgumentError, 'invalid value for "latest_deposit_date_to", the character length must be great than or equal to 10.'
      end

      @latest_deposit_date_to = latest_deposit_date_to
    end

    # Custom attribute writer method with validation
    # @param [Object] va_issue_date_from Value to be assigned
    def va_issue_date_from=(va_issue_date_from)
      if !va_issue_date_from.nil? && va_issue_date_from.to_s.length > 10
        fail ArgumentError, 'invalid value for "va_issue_date_from", the character length must be smaller than or equal to 10.'
      end

      if !va_issue_date_from.nil? && va_issue_date_from.to_s.length < 10
        fail ArgumentError, 'invalid value for "va_issue_date_from", the character length must be great than or equal to 10.'
      end

      @va_issue_date_from = va_issue_date_from
    end

    # Custom attribute writer method with validation
    # @param [Object] va_issue_date_to Value to be assigned
    def va_issue_date_to=(va_issue_date_to)
      if !va_issue_date_to.nil? && va_issue_date_to.to_s.length > 10
        fail ArgumentError, 'invalid value for "va_issue_date_to", the character length must be smaller than or equal to 10.'
      end

      if !va_issue_date_to.nil? && va_issue_date_to.to_s.length < 10
        fail ArgumentError, 'invalid value for "va_issue_date_to", the character length must be great than or equal to 10.'
      end

      @va_issue_date_to = va_issue_date_to
    end

    # Custom attribute writer method with validation
    # @param [Object] expire_date_from Value to be assigned
    def expire_date_from=(expire_date_from)
      if !expire_date_from.nil? && expire_date_from.to_s.length > 10
        fail ArgumentError, 'invalid value for "expire_date_from", the character length must be smaller than or equal to 10.'
      end

      if !expire_date_from.nil? && expire_date_from.to_s.length < 10
        fail ArgumentError, 'invalid value for "expire_date_from", the character length must be great than or equal to 10.'
      end

      @expire_date_from = expire_date_from
    end

    # Custom attribute writer method with validation
    # @param [Object] expire_date_to Value to be assigned
    def expire_date_to=(expire_date_to)
      if !expire_date_to.nil? && expire_date_to.to_s.length > 10
        fail ArgumentError, 'invalid value for "expire_date_to", the character length must be smaller than or equal to 10.'
      end

      if !expire_date_to.nil? && expire_date_to.to_s.length < 10
        fail ArgumentError, 'invalid value for "expire_date_to", the character length must be great than or equal to 10.'
      end

      @expire_date_to = expire_date_to
    end

    # Custom attribute writer method with validation
    # @param [Object] ra_id Value to be assigned
    def ra_id=(ra_id)
      if !ra_id.nil? && ra_id.to_s.length > 29
        fail ArgumentError, 'invalid value for "ra_id", the character length must be smaller than or equal to 29.'
      end

      if !ra_id.nil? && ra_id.to_s.length < 12
        fail ArgumentError, 'invalid value for "ra_id", the character length must be great than or equal to 12.'
      end

      @ra_id = ra_id
    end

    # Custom attribute writer method with validation
    # @param [Object] next_item_key Value to be assigned
    def next_item_key=(next_item_key)
      if !next_item_key.nil? && next_item_key.to_s.length > 24
        fail ArgumentError, 'invalid value for "next_item_key", the character length must be smaller than or equal to 24.'
      end

      if !next_item_key.nil? && next_item_key.to_s.length < 1
        fail ArgumentError, 'invalid value for "next_item_key", the character length must be great than or equal to 1.'
      end

      @next_item_key = next_item_key
    end

    # Custom attribute writer method with validation
    # @param [Object] sort_item_code Value to be assigned
    def sort_item_code=(sort_item_code)
      if !sort_item_code.nil? && sort_item_code.to_s.length > 1
        fail ArgumentError, 'invalid value for "sort_item_code", the character length must be smaller than or equal to 1.'
      end

      if !sort_item_code.nil? && sort_item_code.to_s.length < 1
        fail ArgumentError, 'invalid value for "sort_item_code", the character length must be great than or equal to 1.'
      end

      @sort_item_code = sort_item_code
    end

    # Custom attribute writer method with validation
    # @param [Object] sort_order_code Value to be assigned
    def sort_order_code=(sort_order_code)
      if !sort_order_code.nil? && sort_order_code.to_s.length > 1
        fail ArgumentError, 'invalid value for "sort_order_code", the character length must be smaller than or equal to 1.'
      end

      if !sort_order_code.nil? && sort_order_code.to_s.length < 1
        fail ArgumentError, 'invalid value for "sort_order_code", the character length must be great than or equal to 1.'
      end

      @sort_order_code = sort_order_code
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          va_contract_auth_key == o.va_contract_auth_key &&
          va_type_code == o.va_type_code &&
          deposit_amount_exist_code == o.deposit_amount_exist_code &&
          va_holder_name_kana == o.va_holder_name_kana &&
          va_status_code_list == o.va_status_code_list &&
          latest_deposit_date_from == o.latest_deposit_date_from &&
          latest_deposit_date_to == o.latest_deposit_date_to &&
          va_issue_date_from == o.va_issue_date_from &&
          va_issue_date_to == o.va_issue_date_to &&
          expire_date_from == o.expire_date_from &&
          expire_date_to == o.expire_date_to &&
          ra_id == o.ra_id &&
          next_item_key == o.next_item_key &&
          sort_item_code == o.sort_item_code &&
          sort_order_code == o.sort_order_code &&
          va_id_list == o.va_id_list
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [va_contract_auth_key, va_type_code, deposit_amount_exist_code, va_holder_name_kana, va_status_code_list, latest_deposit_date_from, latest_deposit_date_to, va_issue_date_from, va_issue_date_to, expire_date_from, expire_date_to, ra_id, next_item_key, sort_item_code, sort_order_code, va_id_list].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.swagger_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :BOOLEAN
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        temp_model = SwaggerClient.const_get(type).new
        temp_model.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        next if value.nil?
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end
  end
end
