=begin
#GMO Aozora Net Bank Open API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'uri'
require_relative '../../api_client'
module SwaggerClient
  class TokenApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default("auth"))
      @api_client = api_client
    end
    # アクセストークン発行
    # 認可エンドポイントで取得した認可コードを用いたアクセストークンの取得及びリフレッシュトークンを用いたアクセストークンの更 新を行うためのエンドポイント
    # content_type application/x-www-form-urlencodedに固定
    # @param body HTTPリクエストボディ
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization クライアント認証用のBasic認証値。 (クライアントIDとクライアントシーレットを:(コロン)で連結し、Base64エンコードしたものを設定。) 事前に登録する「クライアント認証方式」にclient_secret_basic(ベーシック認証)を設定した場合、必須。 「クライアント認証方式」にclient_secret_post(パラメーター認証)を設定した場合、設定不要。
    # @return [TokenResponse]
    def token_using_post(body, opts = {})
      data, _status_code, _headers = token_using_post_with_http_info(body, opts)
      data
    end

    # アクセストークン発行
    # 認可エンドポイントで取得した認可コードを用いたアクセストークンの取得及びリフレッシュトークンを用いたアクセストークンの更 新を行うためのエンドポイント
    # content_type application/x-www-form-urlencodedに固定
    # @param body HTTPリクエストボディ
    # @param [Hash] opts the optional parameters
    # @option opts [String] :authorization クライアント認証用のBasic認証値。 (クライアントIDとクライアントシーレットを:(コロン)で連結し、Base64エンコードしたものを設定。) 事前に登録する「クライアント認証方式」にclient_secret_basic(ベーシック認証)を設定した場合、必須。 「クライアント認証方式」にclient_secret_post(パラメーター認証)を設定した場合、設定不要。
    # @return [Array<(TokenResponse, Fixnum, Hash)>] TokenResponse data, response status code and response headers
    def token_using_post_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TokenApi.token_using_post ...'
      end;
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling TokenApi.token_using_post"
      end
      # resource path
      local_var_path = '/token'

      # query parameters
      query_params = @api_client.object_to_hash(body)

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=UTF-8'])
      header_params[:'Authorization'] = opts['authorization'] unless opts['authorization'].nil?

      # form parameters
      form_params = nil
      unless body.nil?
        form_params = @api_client.object_to_hash(body)
      end

      # http body (model)
      body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => body,
        :auth_names => auth_names,
        :return_type => 'TokenResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TokenApi#token_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
