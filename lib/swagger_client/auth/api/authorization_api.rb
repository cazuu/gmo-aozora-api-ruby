=begin
#GMO Aozora Net Bank Open API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'uri'
require_relative '../../api_client'
module SwaggerClient
  class AuthorizationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default("auth"))
      @api_client = api_client
    end
    # 認可
    # クライアントがユーザーの認証・認可を得るためのエンドポイント
    # @param client_id クライアントID (当社が事前に発行する貴社向けのID)  minLength: 1 maxLength: 128 
    # @param redirect_uri 貴社が指定する認可コードをリダイレクトするためのURI  minLength: 1 maxLength: 256 
    # @param response_type 認可フロータイプ。 code固定
    # @param scope 要求されるアクセス権限を示すスコープID。 複数設定する場合は半角スペース区切りにて連結。 リフレッシュトークンを発行する場合は offline_access scope値が必要。  minLength: 1 maxLength: 256
    # @option opts [String] :nonce Client セッションと ID Token を紐づける文字列。設定された場合はそのままの値をID Tokenに含めて返却する。 リプレイアタック攻撃を防止するため、リクエスト毎にランダム値(十分な不規則性となる値)を設定し ID Tokenに含まれるnonce値が認可エンドポイントリクエスト時と同一であることを一度だけ検証するために利用する項目。  minLength: 1 maxLength: 128 
    # @return [nil]
    def authorization(client_id, redirect_uri, response_type, scope, state, opts = {})
      data, status_code, headers = authorization_with_http_info(client_id, redirect_uri, response_type, scope, state, opts)
      data
    end

    # 認可
    # クライアントがユーザーの認証・認可を得るためのエンドポイント
    # @param client_id クライアントID (当社が事前に発行する貴社向けのID)  minLength: 1 maxLength: 128 
    # @param redirect_uri 貴社が指定する認可コードをリダイレクトするためのURI  minLength: 1 maxLength: 256 
    # @param response_type 認可フロータイプ。 code固定
    # @param scope 要求されるアクセス権限を示すスコープID。 複数設定する場合は半角スペース区切りにて連結。 リフレッシュトークンを発行する場合は offline_access scope値が必要。  minLength: 1 maxLength: 256 
    # @param state 貴社にて指定。(要求と応答の間で維持されるランダム値) CSRF対策として同一のセッションであることを確認するために利用する項目。  minLength: 1 maxLength: 128 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :nonce Client セッションと ID Token を紐づける文字列。設定された場合はそのままの値をID Tokenに含めて返却する。 リプレイアタック攻撃を防止するため、リクエスト毎にランダム値(十分な不規則性となる値)を設定し ID Tokenに含まれるnonce値が認可エンドポイントリクエスト時と同一であることを一度だけ検証するために利用する項目。  minLength: 1 maxLength: 128 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response sta｀tus code and response headers
    def authorization_with_http_info(client_id, redirect_uri, response_type, scope, state, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AuthorizationApi.authorization ...'
      end
      # verify the required parameter 'client_id' is set
      if @api_client.config.client_side_validation && client_id.nil?
        fail ArgumentError, "Missing the required parameter 'client_id' when calling AuthorizationApi.authorization"
      end
      # verify the required parameter 'redirect_uri' is set
      if @api_client.config.client_side_validation && redirect_uri.nil?
        fail ArgumentError, "Missing the required parameter 'redirect_uri' when calling AuthorizationApi.authorization"
      end
      # verify the required parameter 'response_type' is set
      if @api_client.config.client_side_validation && response_type.nil?
        fail ArgumentError, "Missing the required parameter 'response_type' when calling AuthorizationApi.authorization"
      end
      # verify the required parameter 'scope' is set
      if @api_client.config.client_side_validation && scope.nil?
        fail ArgumentError, "Missing the required parameter 'scope' when calling AuthorizationApi.authorization"
      end
      # verify the required parameter 'state' is set
      if @api_client.config.client_side_validation && state.nil?
        fail ArgumentError, "Missing the required parameter 'state' when calling AuthorizationApi.authorization"
      end
      # resource path
      local_var_path = '/authorization'

      # query parameters
      query_params = {}
      query_params[:'client_id'] = client_id
      query_params[:'redirect_uri'] = redirect_uri
      query_params[:'response_type'] = response_type
      query_params[:'scope'] = scope
      query_params[:'state'] = state
      query_params[:'nonce'] = opts if !opts.nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json;charset=UTF-8'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json;charset=UTF-8'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AuthorizationApi#authorization\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
